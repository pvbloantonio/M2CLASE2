// <auto-generated />
using System;
using DAL.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(TecnicosDbContext))]
    [Migration("20240221003625_EntidadesMantenedor")]
    partial class EntidadesMantenedor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Compartido.Dto.AlertaTecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodSolicitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visto")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AlertaTecnicos");
                });

            modelBuilder.Entity("Compartido.Dto.Configuracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NumDouble")
                        .HasColumnType("float");

                    b.Property<int>("NumInt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Configuracion");
                });

            modelBuilder.Entity("Compartido.Dto.EnvioCorreo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnvioCorreo");
                });

            modelBuilder.Entity("Compartido.Dto.Imagen", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagen"));

                    b.Property<int>("IdSolicitudfk")
                        .HasColumnType("int");

                    b.Property<string>("ImagenBase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagen");

                    b.HasIndex("IdSolicitudfk")
                        .IsUnique();

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("Compartido.Dto.ImagenArt", b =>
                {
                    b.Property<int>("IdImagenArt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagenArt"));

                    b.Property<int>("IdTipoImagenart")
                        .HasColumnType("int");

                    b.Property<int>("IdVisita")
                        .HasColumnType("int");

                    b.Property<string>("Imagenb64")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagenArt");

                    b.HasIndex("IdTipoImagenart");

                    b.HasIndex("IdVisita");

                    b.ToTable("ImagenArtes");
                });

            modelBuilder.Entity("Compartido.Dto.ImagenArtTipo", b =>
                {
                    b.Property<int>("IdImagenArtTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagenArtTipo"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagenArtTipo");

                    b.ToTable("ImagenArtTipos");
                });

            modelBuilder.Entity("Compartido.Dto.InfoLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InfoLog");
                });

            modelBuilder.Entity("Compartido.Dto.MantenedorArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MantenedorArea");
                });

            modelBuilder.Entity("Compartido.Dto.MantenedorRepuesto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdArea")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdArea");

                    b.ToTable("MantenedorRepuesto");
                });

            modelBuilder.Entity("Compartido.Dto.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MenuConsultaRepuestos")
                        .HasColumnType("bit");

                    b.Property<bool>("MenuDocumentos")
                        .HasColumnType("bit");

                    b.Property<bool>("MenuEstadoTecnicos")
                        .HasColumnType("bit");

                    b.Property<bool>("MenuInfovista")
                        .HasColumnType("bit");

                    b.Property<bool>("MenuLogsvista")
                        .HasColumnType("bit");

                    b.Property<string>("NombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Compartido.Dto.ServicioWindows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServicioWindows");
                });

            modelBuilder.Entity("Compartido.Dto.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<string>("CodEmpresa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CodOrdenServicio")
                        .HasColumnType("int");

                    b.Property<string>("CodSolicitud")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodSolicitudMadre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodUbicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoOs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAsigCliente")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("IdImagen")
                        .HasColumnType("int");

                    b.Property<string>("Nor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsBodeguero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PendienteRepuesto")
                        .HasColumnType("bit");

                    b.Property<bool>("RepuestoEnviado")
                        .HasColumnType("bit");

                    b.Property<string>("RutCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TecnicoUsuarioCodEmpresa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TecnicoUsuarioCodTecnico")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TiempoHSolucion")
                        .HasColumnType("float");

                    b.Property<string>("Zona")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSolicitud");

                    b.HasIndex("CodEmpresa", "CodSolicitud")
                        .IsUnique()
                        .HasFilter("[CodEmpresa] IS NOT NULL AND [CodSolicitud] IS NOT NULL");

                    b.HasIndex("TecnicoUsuarioCodEmpresa", "TecnicoUsuarioCodTecnico");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Compartido.Dto.Tecnico", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodTecnico")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CantidadAsignados")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FireBaseToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodEmpresa", "CodTecnico");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("Compartido.Dto.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Compartido.Dto.Visita", b =>
                {
                    b.Property<int>("CodVisita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodVisita"));

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CodOsParcial")
                        .HasColumnType("int");

                    b.Property<string>("CodSolicitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodSolicitudHija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("EncaminoLatitud")
                        .HasColumnType("float");

                    b.Property<double?>("EncaminoLongitud")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEncamino")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPendiente")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTermino")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTrabajando")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimoUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<double?>("PendienteLatitud")
                        .HasColumnType("float");

                    b.Property<double?>("PendienteLongitud")
                        .HasColumnType("float");

                    b.Property<string>("Reparacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TerminoLatitud")
                        .HasColumnType("float");

                    b.Property<double?>("TerminoLongitud")
                        .HasColumnType("float");

                    b.Property<double?>("TrabajandoLatitud")
                        .HasColumnType("float");

                    b.Property<double?>("TrabajandoLongitud")
                        .HasColumnType("float");

                    b.HasKey("CodVisita");

                    b.HasAlternateKey("CodEmpresa", "CodSolicitud")
                        .HasName("ICodEmpresaCodSolicitud");

                    b.HasIndex("IdSolicitud");

                    b.HasIndex("CodEmpresa", "CodSolicitud");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("Compartido.Dto.Imagen", b =>
                {
                    b.HasOne("Compartido.Dto.Solicitud", "Solicitud")
                        .WithOne("ImagenOs")
                        .HasForeignKey("Compartido.Dto.Imagen", "IdSolicitudfk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Compartido.Dto.ImagenArt", b =>
                {
                    b.HasOne("Compartido.Dto.ImagenArtTipo", "ImagenArtTipo")
                        .WithMany("ListaImagenArt")
                        .HasForeignKey("IdTipoImagenart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Compartido.Dto.Visita", "Visita")
                        .WithMany("ListaImagenesART")
                        .HasForeignKey("IdVisita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImagenArtTipo");

                    b.Navigation("Visita");
                });

            modelBuilder.Entity("Compartido.Dto.MantenedorRepuesto", b =>
                {
                    b.HasOne("Compartido.Dto.MantenedorArea", "MArea")
                        .WithMany("ListaMRepuestos")
                        .HasForeignKey("IdArea")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MArea");
                });

            modelBuilder.Entity("Compartido.Dto.Solicitud", b =>
                {
                    b.HasOne("Compartido.Dto.Tecnico", "TecnicoUsuario")
                        .WithMany("ListaSolicitudes")
                        .HasForeignKey("TecnicoUsuarioCodEmpresa", "TecnicoUsuarioCodTecnico");

                    b.Navigation("TecnicoUsuario");
                });

            modelBuilder.Entity("Compartido.Dto.Usuario", b =>
                {
                    b.HasOne("Compartido.Dto.Rol", "RolUsuario")
                        .WithMany("ListaUsuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolUsuario");
                });

            modelBuilder.Entity("Compartido.Dto.Visita", b =>
                {
                    b.HasOne("Compartido.Dto.Solicitud", "Solicitudes")
                        .WithMany("ListaVisitas")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Compartido.Dto.ImagenArtTipo", b =>
                {
                    b.Navigation("ListaImagenArt");
                });

            modelBuilder.Entity("Compartido.Dto.MantenedorArea", b =>
                {
                    b.Navigation("ListaMRepuestos");
                });

            modelBuilder.Entity("Compartido.Dto.Rol", b =>
                {
                    b.Navigation("ListaUsuarios");
                });

            modelBuilder.Entity("Compartido.Dto.Solicitud", b =>
                {
                    b.Navigation("ImagenOs");

                    b.Navigation("ListaVisitas");
                });

            modelBuilder.Entity("Compartido.Dto.Tecnico", b =>
                {
                    b.Navigation("ListaSolicitudes");
                });

            modelBuilder.Entity("Compartido.Dto.Visita", b =>
                {
                    b.Navigation("ListaImagenesART");
                });
#pragma warning restore 612, 618
        }
    }
}
